# Generated from test.g4 by ANTLR 4.9.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\u008b")
        buf.write("\u0428\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\4<\t<\4=\t=\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\t")
        buf.write("C\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I\tI\4J\tJ\4K\tK\4L\t")
        buf.write("L\4M\tM\4N\tN\4O\tO\4P\tP\4Q\tQ\4R\tR\4S\tS\4T\tT\4U\t")
        buf.write("U\4V\tV\4W\tW\4X\tX\4Y\tY\4Z\tZ\4[\t[\4\\\t\\\4]\t]\4")
        buf.write("^\t^\4_\t_\4`\t`\4a\ta\4b\tb\4c\tc\4d\td\4e\te\4f\tf\4")
        buf.write("g\tg\4h\th\4i\ti\4j\tj\4k\tk\4l\tl\4m\tm\4n\tn\4o\to\4")
        buf.write("p\tp\4q\tq\4r\tr\4s\ts\4t\tt\4u\tu\4v\tv\4w\tw\4x\tx\4")
        buf.write("y\ty\4z\tz\4{\t{\4|\t|\4}\t}\4~\t~\4\177\t\177\4\u0080")
        buf.write("\t\u0080\4\u0081\t\u0081\4\u0082\t\u0082\4\u0083\t\u0083")
        buf.write("\4\u0084\t\u0084\4\u0085\t\u0085\4\u0086\t\u0086\4\u0087")
        buf.write("\t\u0087\4\u0088\t\u0088\4\u0089\t\u0089\4\u008a\t\u008a")
        buf.write("\4\u008b\t\u008b\4\u008c\t\u008c\4\u008d\t\u008d\4\u008e")
        buf.write("\t\u008e\4\u008f\t\u008f\4\u0090\t\u0090\4\u0091\t\u0091")
        buf.write("\4\u0092\t\u0092\4\u0093\t\u0093\4\u0094\t\u0094\3\2\3")
        buf.write("\2\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4")
        buf.write("\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3")
        buf.write("\6\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\t")
        buf.write("\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\13")
        buf.write("\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f")
        buf.write("\3\f\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\17")
        buf.write("\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20")
        buf.write("\3\20\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\23")
        buf.write("\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\25")
        buf.write("\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3\27")
        buf.write("\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30")
        buf.write("\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\31")
        buf.write("\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32")
        buf.write("\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34")
        buf.write("\3\34\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\36\3\36")
        buf.write("\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37")
        buf.write("\3\37\3\37\3 \3 \3 \3 \3 \3 \3 \3 \3 \3!\3!\3!\3\"\3\"")
        buf.write("\3\"\3\"\3\"\3#\3#\3#\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$\3")
        buf.write("$\3$\3$\3$\3$\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3\'\3\'\3")
        buf.write("\'\3\'\3(\3(\3(\3(\3(\3)\3)\3)\3)\3*\3*\3*\3*\3+\3+\3")
        buf.write("+\3+\3,\3,\3,\3,\3,\3,\3-\3-\3-\3-\3.\3.\3.\3.\3.\3.\3")
        buf.write("/\3/\3/\3/\3/\3/\3\60\3\60\3\60\3\60\3\60\3\61\3\61\3")
        buf.write("\61\3\61\3\61\3\61\3\61\3\61\3\62\3\62\3\62\3\62\3\62")
        buf.write("\3\62\3\62\3\63\3\63\3\63\3\64\3\64\3\64\3\64\3\64\3\65")
        buf.write("\3\65\3\65\3\65\3\65\3\65\3\65\3\65\3\65\3\65\3\66\3\66")
        buf.write("\3\66\3\66\3\66\3\66\3\66\3\66\3\67\3\67\3\67\3\67\3\67")
        buf.write("\3\67\38\38\38\38\38\38\39\39\39\39\39\39\39\3:\3:\3:")
        buf.write("\3:\3:\3:\3;\3;\3;\3;\3;\3;\3;\3;\3<\3<\3<\3<\3<\3<\3")
        buf.write("=\3=\3=\3=\3=\3>\3>\3>\3>\3>\3?\3?\3?\3?\3?\3?\3?\3?\3")
        buf.write("?\3@\3@\3@\3@\3@\3A\3A\3A\3B\3B\3B\3B\3B\3B\3B\3B\3C\3")
        buf.write("C\3C\3C\3C\3C\3C\3D\3D\3D\3D\3D\3D\3D\3D\3D\3D\3E\3E\3")
        buf.write("E\3E\3F\3F\3F\3F\3G\3G\3G\3G\3H\3H\3H\3H\3I\3I\3I\3I\3")
        buf.write("I\3I\3J\3J\3J\3J\3J\3J\3J\3J\3J\3J\3J\3K\3K\3K\3K\3K\3")
        buf.write("K\3K\3K\3K\3L\3L\3L\3L\3L\3M\3M\3M\3M\3M\3M\3M\3N\3N\3")
        buf.write("N\3N\3O\3O\3O\3O\3O\3O\3O\3O\3P\3P\3P\3P\3P\3Q\3Q\3Q\3")
        buf.write("Q\3Q\3Q\3R\3R\3R\3R\3R\3R\3S\3S\3S\3T\3T\3T\3T\3T\3T\3")
        buf.write("U\3U\3U\3U\3U\3U\3U\3V\3V\3V\3V\3V\3V\3W\3W\3W\3W\3W\3")
        buf.write("W\3W\3X\3X\3X\3X\3X\3Y\3Y\3Y\3Y\3Y\3Z\3Z\3Z\3Z\3Z\3[\3")
        buf.write("[\3[\3[\3[\3[\3\\\3\\\3\\\3\\\3\\\3\\\3\\\3\\\3]\3]\3")
        buf.write("]\3]\3^\3^\3^\3^\3^\3_\3_\3_\3_\3_\3_\3_\3`\3`\3`\3`\3")
        buf.write("`\3`\3`\3`\3a\3a\3b\3b\3c\3c\3d\3d\3e\3e\3f\3f\3g\3g\3")
        buf.write("g\3g\3h\3h\3h\3h\3i\3i\3j\3j\3k\3k\3k\3l\3l\3l\3m\3m\3")
        buf.write("m\3n\3n\3n\3o\3o\3p\3p\3q\3q\3q\3q\3r\3r\3r\3s\3s\3s\3")
        buf.write("s\3t\3t\3u\3u\3v\3v\3w\3w\3x\3x\3x\3y\3y\3z\3z\3z\3{\3")
        buf.write("{\3|\3|\3|\3}\3}\3}\3~\3~\3~\3\177\3\177\3\177\3\u0080")
        buf.write("\3\u0080\3\u0080\3\u0081\3\u0081\3\u0081\3\u0082\3\u0082")
        buf.write("\3\u0082\3\u0082\3\u0082\3\u0083\3\u0083\3\u0083\3\u0083")
        buf.write("\3\u0083\3\u0084\3\u0084\7\u0084\u03d2\n\u0084\f\u0084")
        buf.write("\16\u0084\u03d5\13\u0084\3\u0084\6\u0084\u03d8\n\u0084")
        buf.write("\r\u0084\16\u0084\u03d9\5\u0084\u03dc\n\u0084\3\u0085")
        buf.write("\3\u0085\3\u0085\6\u0085\u03e1\n\u0085\r\u0085\16\u0085")
        buf.write("\u03e2\3\u0086\3\u0086\3\u0086\6\u0086\u03e8\n\u0086\r")
        buf.write("\u0086\16\u0086\u03e9\3\u0087\3\u0087\3\u0087\6\u0087")
        buf.write("\u03ef\n\u0087\r\u0087\16\u0087\u03f0\3\u0088\5\u0088")
        buf.write("\u03f4\n\u0088\3\u0088\3\u0088\3\u0088\3\u0088\5\u0088")
        buf.write("\u03fa\n\u0088\3\u0089\3\u0089\7\u0089\u03fe\n\u0089\f")
        buf.write("\u0089\16\u0089\u0401\13\u0089\3\u008a\3\u008a\3\u008a")
        buf.write("\3\u008a\3\u008b\6\u008b\u0408\n\u008b\r\u008b\16\u008b")
        buf.write("\u0409\3\u008c\3\u008c\6\u008c\u040e\n\u008c\r\u008c\16")
        buf.write("\u008c\u040f\3\u008d\3\u008d\5\u008d\u0414\n\u008d\3\u008e")
        buf.write("\3\u008e\5\u008e\u0418\n\u008e\3\u008f\3\u008f\3\u0090")
        buf.write("\3\u0090\3\u0091\3\u0091\3\u0092\3\u0092\3\u0093\3\u0093")
        buf.write("\3\u0094\6\u0094\u0425\n\u0094\r\u0094\16\u0094\u0426")
        buf.write("\2\2\u0095\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25")
        buf.write("\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+")
        buf.write("\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E")
        buf.write("$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k")
        buf.write("\67m8o9q:s;u<w=y>{?}@\177A\u0081B\u0083C\u0085D\u0087")
        buf.write("E\u0089F\u008bG\u008dH\u008fI\u0091J\u0093K\u0095L\u0097")
        buf.write("M\u0099N\u009bO\u009dP\u009fQ\u00a1R\u00a3S\u00a5T\u00a7")
        buf.write("U\u00a9V\u00abW\u00adX\u00afY\u00b1Z\u00b3[\u00b5\\\u00b7")
        buf.write("]\u00b9^\u00bb_\u00bd`\u00bfa\u00c1b\u00c3c\u00c5d\u00c7")
        buf.write("e\u00c9f\u00cbg\u00cdh\u00cfi\u00d1j\u00d3k\u00d5l\u00d7")
        buf.write("m\u00d9n\u00dbo\u00ddp\u00dfq\u00e1r\u00e3s\u00e5t\u00e7")
        buf.write("u\u00e9v\u00ebw\u00edx\u00efy\u00f1z\u00f3{\u00f5|\u00f7")
        buf.write("}\u00f9~\u00fb\177\u00fd\u0080\u00ff\u0081\u0101\u0082")
        buf.write("\u0103\u0083\u0105\u0084\u0107\u0085\u0109\u0086\u010b")
        buf.write("\u0087\u010d\u0088\u010f\u0089\u0111\u008a\u0113\u008b")
        buf.write("\u0115\2\u0117\2\u0119\2\u011b\2\u011d\2\u011f\2\u0121")
        buf.write("\2\u0123\2\u0125\2\u0127\2\3\2\f\4\2QQqq\4\2ZZzz\4\2D")
        buf.write("Ddd\4\2C\\c|\3\2\62;\3\2\63;\3\2\629\5\2\62;CHch\3\2\62")
        buf.write("\63\5\2\13\f\17\17\"\"\2\u042b\2\3\3\2\2\2\2\5\3\2\2\2")
        buf.write("\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17")
        buf.write("\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3")
        buf.write("\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2")
        buf.write("\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3")
        buf.write("\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2")
        buf.write("\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3")
        buf.write("\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E")
        buf.write("\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2")
        buf.write("O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2")
        buf.write("\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2")
        buf.write("\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2")
        buf.write("\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3")
        buf.write("\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177")
        buf.write("\3\2\2\2\2\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085\3\2\2")
        buf.write("\2\2\u0087\3\2\2\2\2\u0089\3\2\2\2\2\u008b\3\2\2\2\2\u008d")
        buf.write("\3\2\2\2\2\u008f\3\2\2\2\2\u0091\3\2\2\2\2\u0093\3\2\2")
        buf.write("\2\2\u0095\3\2\2\2\2\u0097\3\2\2\2\2\u0099\3\2\2\2\2\u009b")
        buf.write("\3\2\2\2\2\u009d\3\2\2\2\2\u009f\3\2\2\2\2\u00a1\3\2\2")
        buf.write("\2\2\u00a3\3\2\2\2\2\u00a5\3\2\2\2\2\u00a7\3\2\2\2\2\u00a9")
        buf.write("\3\2\2\2\2\u00ab\3\2\2\2\2\u00ad\3\2\2\2\2\u00af\3\2\2")
        buf.write("\2\2\u00b1\3\2\2\2\2\u00b3\3\2\2\2\2\u00b5\3\2\2\2\2\u00b7")
        buf.write("\3\2\2\2\2\u00b9\3\2\2\2\2\u00bb\3\2\2\2\2\u00bd\3\2\2")
        buf.write("\2\2\u00bf\3\2\2\2\2\u00c1\3\2\2\2\2\u00c3\3\2\2\2\2\u00c5")
        buf.write("\3\2\2\2\2\u00c7\3\2\2\2\2\u00c9\3\2\2\2\2\u00cb\3\2\2")
        buf.write("\2\2\u00cd\3\2\2\2\2\u00cf\3\2\2\2\2\u00d1\3\2\2\2\2\u00d3")
        buf.write("\3\2\2\2\2\u00d5\3\2\2\2\2\u00d7\3\2\2\2\2\u00d9\3\2\2")
        buf.write("\2\2\u00db\3\2\2\2\2\u00dd\3\2\2\2\2\u00df\3\2\2\2\2\u00e1")
        buf.write("\3\2\2\2\2\u00e3\3\2\2\2\2\u00e5\3\2\2\2\2\u00e7\3\2\2")
        buf.write("\2\2\u00e9\3\2\2\2\2\u00eb\3\2\2\2\2\u00ed\3\2\2\2\2\u00ef")
        buf.write("\3\2\2\2\2\u00f1\3\2\2\2\2\u00f3\3\2\2\2\2\u00f5\3\2\2")
        buf.write("\2\2\u00f7\3\2\2\2\2\u00f9\3\2\2\2\2\u00fb\3\2\2\2\2\u00fd")
        buf.write("\3\2\2\2\2\u00ff\3\2\2\2\2\u0101\3\2\2\2\2\u0103\3\2\2")
        buf.write("\2\2\u0105\3\2\2\2\2\u0107\3\2\2\2\2\u0109\3\2\2\2\2\u010b")
        buf.write("\3\2\2\2\2\u010d\3\2\2\2\2\u010f\3\2\2\2\2\u0111\3\2\2")
        buf.write("\2\2\u0113\3\2\2\2\3\u0129\3\2\2\2\5\u012b\3\2\2\2\7\u0133")
        buf.write("\3\2\2\2\t\u013b\3\2\2\2\13\u0140\3\2\2\2\r\u0146\3\2")
        buf.write("\2\2\17\u014c\3\2\2\2\21\u0152\3\2\2\2\23\u0158\3\2\2")
        buf.write("\2\25\u015f\3\2\2\2\27\u0166\3\2\2\2\31\u016d\3\2\2\2")
        buf.write("\33\u0172\3\2\2\2\35\u0177\3\2\2\2\37\u017d\3\2\2\2!\u0184")
        buf.write("\3\2\2\2#\u0188\3\2\2\2%\u018d\3\2\2\2\'\u0192\3\2\2\2")
        buf.write(")\u0198\3\2\2\2+\u019d\3\2\2\2-\u01a3\3\2\2\2/\u01ab\3")
        buf.write("\2\2\2\61\u01b4\3\2\2\2\63\u01bd\3\2\2\2\65\u01c7\3\2")
        buf.write("\2\2\67\u01cc\3\2\2\29\u01d1\3\2\2\2;\u01d9\3\2\2\2=\u01e2")
        buf.write("\3\2\2\2?\u01e8\3\2\2\2A\u01f1\3\2\2\2C\u01f4\3\2\2\2")
        buf.write("E\u01f9\3\2\2\2G\u0201\3\2\2\2I\u020b\3\2\2\2K\u0210\3")
        buf.write("\2\2\2M\u0215\3\2\2\2O\u0219\3\2\2\2Q\u021e\3\2\2\2S\u0222")
        buf.write("\3\2\2\2U\u0226\3\2\2\2W\u022a\3\2\2\2Y\u0230\3\2\2\2")
        buf.write("[\u0234\3\2\2\2]\u023a\3\2\2\2_\u0240\3\2\2\2a\u0245\3")
        buf.write("\2\2\2c\u024d\3\2\2\2e\u0254\3\2\2\2g\u0257\3\2\2\2i\u025c")
        buf.write("\3\2\2\2k\u0266\3\2\2\2m\u026e\3\2\2\2o\u0274\3\2\2\2")
        buf.write("q\u027a\3\2\2\2s\u0281\3\2\2\2u\u0287\3\2\2\2w\u028f\3")
        buf.write("\2\2\2y\u0295\3\2\2\2{\u029a\3\2\2\2}\u029f\3\2\2\2\177")
        buf.write("\u02a8\3\2\2\2\u0081\u02ad\3\2\2\2\u0083\u02b0\3\2\2\2")
        buf.write("\u0085\u02b8\3\2\2\2\u0087\u02bf\3\2\2\2\u0089\u02c9\3")
        buf.write("\2\2\2\u008b\u02cd\3\2\2\2\u008d\u02d1\3\2\2\2\u008f\u02d5")
        buf.write("\3\2\2\2\u0091\u02d9\3\2\2\2\u0093\u02df\3\2\2\2\u0095")
        buf.write("\u02ea\3\2\2\2\u0097\u02f3\3\2\2\2\u0099\u02f8\3\2\2\2")
        buf.write("\u009b\u02ff\3\2\2\2\u009d\u0303\3\2\2\2\u009f\u030b\3")
        buf.write("\2\2\2\u00a1\u0310\3\2\2\2\u00a3\u0316\3\2\2\2\u00a5\u031c")
        buf.write("\3\2\2\2\u00a7\u031f\3\2\2\2\u00a9\u0325\3\2\2\2\u00ab")
        buf.write("\u032c\3\2\2\2\u00ad\u0332\3\2\2\2\u00af\u0339\3\2\2\2")
        buf.write("\u00b1\u033e\3\2\2\2\u00b3\u0343\3\2\2\2\u00b5\u0348\3")
        buf.write("\2\2\2\u00b7\u034e\3\2\2\2\u00b9\u0356\3\2\2\2\u00bb\u035a")
        buf.write("\3\2\2\2\u00bd\u035f\3\2\2\2\u00bf\u0366\3\2\2\2\u00c1")
        buf.write("\u036e\3\2\2\2\u00c3\u0370\3\2\2\2\u00c5\u0372\3\2\2\2")
        buf.write("\u00c7\u0374\3\2\2\2\u00c9\u0376\3\2\2\2\u00cb\u0378\3")
        buf.write("\2\2\2\u00cd\u037a\3\2\2\2\u00cf\u037e\3\2\2\2\u00d1\u0382")
        buf.write("\3\2\2\2\u00d3\u0384\3\2\2\2\u00d5\u0386\3\2\2\2\u00d7")
        buf.write("\u0389\3\2\2\2\u00d9\u038c\3\2\2\2\u00db\u038f\3\2\2\2")
        buf.write("\u00dd\u0392\3\2\2\2\u00df\u0394\3\2\2\2\u00e1\u0396\3")
        buf.write("\2\2\2\u00e3\u039a\3\2\2\2\u00e5\u039d\3\2\2\2\u00e7\u03a1")
        buf.write("\3\2\2\2\u00e9\u03a3\3\2\2\2\u00eb\u03a5\3\2\2\2\u00ed")
        buf.write("\u03a7\3\2\2\2\u00ef\u03a9\3\2\2\2\u00f1\u03ac\3\2\2\2")
        buf.write("\u00f3\u03ae\3\2\2\2\u00f5\u03b1\3\2\2\2\u00f7\u03b3\3")
        buf.write("\2\2\2\u00f9\u03b6\3\2\2\2\u00fb\u03b9\3\2\2\2\u00fd\u03bc")
        buf.write("\3\2\2\2\u00ff\u03bf\3\2\2\2\u0101\u03c2\3\2\2\2\u0103")
        buf.write("\u03c5\3\2\2\2\u0105\u03ca\3\2\2\2\u0107\u03db\3\2\2\2")
        buf.write("\u0109\u03dd\3\2\2\2\u010b\u03e4\3\2\2\2\u010d\u03eb\3")
        buf.write("\2\2\2\u010f\u03f9\3\2\2\2\u0111\u03fb\3\2\2\2\u0113\u0402")
        buf.write("\3\2\2\2\u0115\u0407\3\2\2\2\u0117\u040b\3\2\2\2\u0119")
        buf.write("\u0413\3\2\2\2\u011b\u0417\3\2\2\2\u011d\u0419\3\2\2\2")
        buf.write("\u011f\u041b\3\2\2\2\u0121\u041d\3\2\2\2\u0123\u041f\3")
        buf.write("\2\2\2\u0125\u0421\3\2\2\2\u0127\u0424\3\2\2\2\u0129\u012a")
        buf.write("\7)\2\2\u012a\4\3\2\2\2\u012b\u012c\7h\2\2\u012c\u012d")
        buf.write("\7n\2\2\u012d\u012e\7q\2\2\u012e\u012f\7c\2\2\u012f\u0130")
        buf.write("\7v\2\2\u0130\u0131\7\65\2\2\u0131\u0132\7\64\2\2\u0132")
        buf.write("\6\3\2\2\2\u0133\u0134\7h\2\2\u0134\u0135\7n\2\2\u0135")
        buf.write("\u0136\7q\2\2\u0136\u0137\7c\2\2\u0137\u0138\7v\2\2\u0138")
        buf.write("\u0139\78\2\2\u0139\u013a\7\66\2\2\u013a\b\3\2\2\2\u013b")
        buf.write("\u013c\7k\2\2\u013c\u013d\7p\2\2\u013d\u013e\7v\2\2\u013e")
        buf.write("\u013f\7:\2\2\u013f\n\3\2\2\2\u0140\u0141\7k\2\2\u0141")
        buf.write("\u0142\7p\2\2\u0142\u0143\7v\2\2\u0143\u0144\7\63\2\2")
        buf.write("\u0144\u0145\78\2\2\u0145\f\3\2\2\2\u0146\u0147\7k\2\2")
        buf.write("\u0147\u0148\7p\2\2\u0148\u0149\7v\2\2\u0149\u014a\7\65")
        buf.write("\2\2\u014a\u014b\7\64\2\2\u014b\16\3\2\2\2\u014c\u014d")
        buf.write("\7k\2\2\u014d\u014e\7p\2\2\u014e\u014f\7v\2\2\u014f\u0150")
        buf.write("\78\2\2\u0150\u0151\7\66\2\2\u0151\20\3\2\2\2\u0152\u0153")
        buf.write("\7w\2\2\u0153\u0154\7k\2\2\u0154\u0155\7p\2\2\u0155\u0156")
        buf.write("\7v\2\2\u0156\u0157\7:\2\2\u0157\22\3\2\2\2\u0158\u0159")
        buf.write("\7w\2\2\u0159\u015a\7k\2\2\u015a\u015b\7p\2\2\u015b\u015c")
        buf.write("\7v\2\2\u015c\u015d\7\63\2\2\u015d\u015e\78\2\2\u015e")
        buf.write("\24\3\2\2\2\u015f\u0160\7w\2\2\u0160\u0161\7k\2\2\u0161")
        buf.write("\u0162\7p\2\2\u0162\u0163\7v\2\2\u0163\u0164\7\65\2\2")
        buf.write("\u0164\u0165\7\64\2\2\u0165\26\3\2\2\2\u0166\u0167\7w")
        buf.write("\2\2\u0167\u0168\7k\2\2\u0168\u0169\7p\2\2\u0169\u016a")
        buf.write("\7v\2\2\u016a\u016b\78\2\2\u016b\u016c\7\66\2\2\u016c")
        buf.write("\30\3\2\2\2\u016d\u016e\7e\2\2\u016e\u016f\7j\2\2\u016f")
        buf.write("\u0170\7c\2\2\u0170\u0171\7t\2\2\u0171\32\3\2\2\2\u0172")
        buf.write("\u0173\7d\2\2\u0173\u0174\7q\2\2\u0174\u0175\7q\2\2\u0175")
        buf.write("\u0176\7n\2\2\u0176\34\3\2\2\2\u0177\u0178\7h\2\2\u0178")
        buf.write("\u0179\7q\2\2\u0179\u017a\7n\2\2\u017a\u017b\7f\2\2\u017b")
        buf.write("\u017c\7y\2\2\u017c\36\3\2\2\2\u017d\u017e\7h\2\2\u017e")
        buf.write("\u017f\7q\2\2\u017f\u0180\7n\2\2\u0180\u0181\7f\2\2\u0181")
        buf.write("\u0182\7y\2\2\u0182\u0183\7k\2\2\u0183 \3\2\2\2\u0184")
        buf.write("\u0185\7o\2\2\u0185\u0186\7c\2\2\u0186\u0187\7r\2\2\u0187")
        buf.write("\"\3\2\2\2\u0188\u0189\7o\2\2\u0189\u018a\7c\2\2\u018a")
        buf.write("\u018b\7r\2\2\u018b\u018c\7k\2\2\u018c$\3\2\2\2\u018d")
        buf.write("\u018e\7h\2\2\u018e\u018f\7q\2\2\u018f\u0190\7n\2\2\u0190")
        buf.write("\u0191\7f\2\2\u0191&\3\2\2\2\u0192\u0193\7h\2\2\u0193")
        buf.write("\u0194\7q\2\2\u0194\u0195\7n\2\2\u0195\u0196\7f\2\2\u0196")
        buf.write("\u0197\7k\2\2\u0197(\3\2\2\2\u0198\u0199\7o\2\2\u0199")
        buf.write("\u019a\7c\2\2\u019a\u019b\7r\2\2\u019b\u019c\7y\2\2\u019c")
        buf.write("*\3\2\2\2\u019d\u019e\7o\2\2\u019e\u019f\7c\2\2\u019f")
        buf.write("\u01a0\7r\2\2\u01a0\u01a1\7y\2\2\u01a1\u01a2\7k\2\2\u01a2")
        buf.write(",\3\2\2\2\u01a3\u01a4\7o\2\2\u01a4\u01a5\7c\2\2\u01a5")
        buf.write("\u01a6\7r\2\2\u01a6\u01a7\7h\2\2\u01a7\u01a8\7q\2\2\u01a8")
        buf.write("\u01a9\7n\2\2\u01a9\u01aa\7f\2\2\u01aa.\3\2\2\2\u01ab")
        buf.write("\u01ac\7o\2\2\u01ac\u01ad\7c\2\2\u01ad\u01ae\7r\2\2\u01ae")
        buf.write("\u01af\7h\2\2\u01af\u01b0\7q\2\2\u01b0\u01b1\7n\2\2\u01b1")
        buf.write("\u01b2\7f\2\2\u01b2\u01b3\7k\2\2\u01b3\60\3\2\2\2\u01b4")
        buf.write("\u01b5\7o\2\2\u01b5\u01b6\7c\2\2\u01b6\u01b7\7r\2\2\u01b7")
        buf.write("\u01b8\7h\2\2\u01b8\u01b9\7q\2\2\u01b9\u01ba\7n\2\2\u01ba")
        buf.write("\u01bb\7f\2\2\u01bb\u01bc\7y\2\2\u01bc\62\3\2\2\2\u01bd")
        buf.write("\u01be\7o\2\2\u01be\u01bf\7c\2\2\u01bf\u01c0\7r\2\2\u01c0")
        buf.write("\u01c1\7h\2\2\u01c1\u01c2\7q\2\2\u01c2\u01c3\7n\2\2\u01c3")
        buf.write("\u01c4\7f\2\2\u01c4\u01c5\7y\2\2\u01c5\u01c6\7k\2\2\u01c6")
        buf.write("\64\3\2\2\2\u01c7\u01c8\7e\2\2\u01c8\u01c9\7c\2\2\u01c9")
        buf.write("\u01ca\7u\2\2\u01ca\u01cb\7g\2\2\u01cb\66\3\2\2\2\u01cc")
        buf.write("\u01cd\7o\2\2\u01cd\u01ce\7c\2\2\u01ce\u01cf\7m\2\2\u01cf")
        buf.write("\u01d0\7g\2\2\u01d08\3\2\2\2\u01d1\u01d2\7h\2\2\u01d2")
        buf.write("\u01d3\7n\2\2\u01d3\u01d4\7c\2\2\u01d4\u01d5\7v\2\2\u01d5")
        buf.write("\u01d6\7v\2\2\u01d6\u01d7\7g\2\2\u01d7\u01d8\7p\2\2\u01d8")
        buf.write(":\3\2\2\2\u01d9\u01da\7k\2\2\u01da\u01db\7v\2\2\u01db")
        buf.write("\u01dc\7g\2\2\u01dc\u01dd\7t\2\2\u01dd\u01de\7c\2\2\u01de")
        buf.write("\u01df\7v\2\2\u01df\u01e0\7q\2\2\u01e0\u01e1\7t\2\2\u01e1")
        buf.write("<\3\2\2\2\u01e2\u01e3\7g\2\2\u01e3\u01e4\7x\2\2\u01e4")
        buf.write("\u01e5\7g\2\2\u01e5\u01e6\7t\2\2\u01e6\u01e7\7{\2\2\u01e7")
        buf.write(">\3\2\2\2\u01e8\u01e9\7r\2\2\u01e9\u01ea\7t\2\2\u01ea")
        buf.write("\u01eb\7g\2\2\u01eb\u01ec\7h\2\2\u01ec\u01ed\7k\2\2\u01ed")
        buf.write("\u01ee\7z\2\2\u01ee\u01ef\7q\2\2\u01ef\u01f0\7r\2\2\u01f0")
        buf.write("@\3\2\2\2\u01f1\u01f2\7q\2\2\u01f2\u01f3\7h\2\2\u01f3")
        buf.write("B\3\2\2\2\u01f4\u01f5\7y\2\2\u01f5\u01f6\7k\2\2\u01f6")
        buf.write("\u01f7\7v\2\2\u01f7\u01f8\7j\2\2\u01f8D\3\2\2\2\u01f9")
        buf.write("\u01fa\7t\2\2\u01fa\u01fb\7g\2\2\u01fb\u01fc\7x\2\2\u01fc")
        buf.write("\u01fd\7g\2\2\u01fd\u01fe\7t\2\2\u01fe\u01ff\7u\2\2\u01ff")
        buf.write("\u0200\7g\2\2\u0200F\3\2\2\2\u0201\u0202\7v\2\2\u0202")
        buf.write("\u0203\7t\2\2\u0203\u0204\7c\2\2\u0204\u0205\7p\2\2\u0205")
        buf.write("\u0206\7u\2\2\u0206\u0207\7r\2\2\u0207\u0208\7q\2\2\u0208")
        buf.write("\u0209\7u\2\2\u0209\u020a\7g\2\2\u020aH\3\2\2\2\u020b")
        buf.write("\u020c\7n\2\2\u020c\u020d\7p\2\2\u020d\u020e\7q\2\2\u020e")
        buf.write("\u020f\7v\2\2\u020fJ\3\2\2\2\u0210\u0211\7n\2\2\u0211")
        buf.write("\u0212\7c\2\2\u0212\u0213\7p\2\2\u0213\u0214\7f\2\2\u0214")
        buf.write("L\3\2\2\2\u0215\u0216\7n\2\2\u0216\u0217\7q\2\2\u0217")
        buf.write("\u0218\7t\2\2\u0218N\3\2\2\2\u0219\u021a\7n\2\2\u021a")
        buf.write("\u021b\7z\2\2\u021b\u021c\7q\2\2\u021c\u021d\7t\2\2\u021d")
        buf.write("P\3\2\2\2\u021e\u021f\7n\2\2\u021f\u0220\7u\2\2\u0220")
        buf.write("\u0221\7n\2\2\u0221R\3\2\2\2\u0222\u0223\7n\2\2\u0223")
        buf.write("\u0224\7u\2\2\u0224\u0225\7t\2\2\u0225T\3\2\2\2\u0226")
        buf.write("\u0227\7r\2\2\u0227\u0228\7t\2\2\u0228\u0229\7g\2\2\u0229")
        buf.write("V\3\2\2\2\u022a\u022b\7c\2\2\u022b\u022c\7t\2\2\u022c")
        buf.write("\u022d\7t\2\2\u022d\u022e\7q\2\2\u022e\u022f\7y\2\2\u022f")
        buf.write("X\3\2\2\2\u0230\u0231\7h\2\2\u0231\u0232\7d\2\2\u0232")
        buf.write("\u0233\7{\2\2\u0233Z\3\2\2\2\u0234\u0235\7v\2\2\u0235")
        buf.write("\u0236\7k\2\2\u0236\u0237\7o\2\2\u0237\u0238\7g\2\2\u0238")
        buf.write("\u0239\7u\2\2\u0239\\\3\2\2\2\u023a\u023b\7o\2\2\u023b")
        buf.write("\u023c\7g\2\2\u023c\u023d\7t\2\2\u023d\u023e\7i\2\2\u023e")
        buf.write("\u023f\7g\2\2\u023f^\3\2\2\2\u0240\u0241\7n\2\2\u0241")
        buf.write("\u0242\7c\2\2\u0242\u0243\7u\2\2\u0243\u0244\7v\2\2\u0244")
        buf.write("`\3\2\2\2\u0245\u0246\7t\2\2\u0246\u0247\7g\2\2\u0247")
        buf.write("\u0248\7u\2\2\u0248\u0249\7v\2\2\u0249\u024a\7c\2\2\u024a")
        buf.write("\u024b\7t\2\2\u024b\u024c\7v\2\2\u024cb\3\2\2\2\u024d")
        buf.write("\u024e\7t\2\2\u024e\u024f\7g\2\2\u024f\u0250\7u\2\2\u0250")
        buf.write("\u0251\7w\2\2\u0251\u0252\7o\2\2\u0252\u0253\7g\2\2\u0253")
        buf.write("d\3\2\2\2\u0254\u0255\7f\2\2\u0255\u0256\7q\2\2\u0256")
        buf.write("f\3\2\2\2\u0257\u0258\7g\2\2\u0258\u0259\7n\2\2\u0259")
        buf.write("\u025a\7k\2\2\u025a\u025b\7h\2\2\u025bh\3\2\2\2\u025c")
        buf.write("\u025d\7c\2\2\u025d\u025e\7w\2\2\u025e\u025f\7v\2\2\u025f")
        buf.write("\u0260\7q\2\2\u0260\u0261\7o\2\2\u0261\u0262\7c\2\2\u0262")
        buf.write("\u0263\7v\2\2\u0263\u0264\7q\2\2\u0264\u0265\7p\2\2\u0265")
        buf.write("j\3\2\2\2\u0266\u0267\7k\2\2\u0267\u0268\7p\2\2\u0268")
        buf.write("\u0269\7k\2\2\u0269\u026a\7v\2\2\u026a\u026b\7k\2\2\u026b")
        buf.write("\u026c\7c\2\2\u026c\u026d\7n\2\2\u026dl\3\2\2\2\u026e")
        buf.write("\u026f\7h\2\2\u026f\u0270\7k\2\2\u0270\u0271\7p\2\2\u0271")
        buf.write("\u0272\7c\2\2\u0272\u0273\7n\2\2\u0273n\3\2\2\2\u0274")
        buf.write("\u0275\7u\2\2\u0275\u0276\7v\2\2\u0276\u0277\7c\2\2\u0277")
        buf.write("\u0278\7v\2\2\u0278\u0279\7g\2\2\u0279p\3\2\2\2\u027a")
        buf.write("\u027b\7w\2\2\u027b\u027c\7p\2\2\u027c\u027d\7n\2\2\u027d")
        buf.write("\u027e\7g\2\2\u027e\u027f\7u\2\2\u027f\u0280\7u\2\2\u0280")
        buf.write("r\3\2\2\2\u0281\u0282\7w\2\2\u0282\u0283\7p\2\2\u0283")
        buf.write("\u0284\7v\2\2\u0284\u0285\7k\2\2\u0285\u0286\7n\2\2\u0286")
        buf.write("t\3\2\2\2\u0287\u0288\7u\2\2\u0288\u0289\7{\2\2\u0289")
        buf.write("\u028a\7p\2\2\u028a\u028b\7e\2\2\u028b\u028c\7j\2\2\u028c")
        buf.write("\u028d\7t\2\2\u028d\u028e\7q\2\2\u028ev\3\2\2\2\u028f")
        buf.write("\u0290\7o\2\2\u0290\u0291\7c\2\2\u0291\u0292\7v\2\2\u0292")
        buf.write("\u0293\7e\2\2\u0293\u0294\7j\2\2\u0294x\3\2\2\2\u0295")
        buf.write("\u0296\7v\2\2\u0296\u0297\7j\2\2\u0297\u0298\7g\2\2\u0298")
        buf.write("\u0299\7p\2\2\u0299z\3\2\2\2\u029a\u029b\7g\2\2\u029b")
        buf.write("\u029c\7n\2\2\u029c\u029d\7u\2\2\u029d\u029e\7g\2\2\u029e")
        buf.write("|\3\2\2\2\u029f\u02a0\7c\2\2\u02a0\u02a1\7e\2\2\u02a1")
        buf.write("\u02a2\7v\2\2\u02a2\u02a3\7k\2\2\u02a3\u02a4\7x\2\2\u02a4")
        buf.write("\u02a5\7c\2\2\u02a5\u02a6\7v\2\2\u02a6\u02a7\7g\2\2\u02a7")
        buf.write("~\3\2\2\2\u02a8\u02a9\7g\2\2\u02a9\u02aa\7o\2\2\u02aa")
        buf.write("\u02ab\7k\2\2\u02ab\u02ac\7v\2\2\u02ac\u0080\3\2\2\2\u02ad")
        buf.write("\u02ae\7k\2\2\u02ae\u02af\7h\2\2\u02af\u0082\3\2\2\2\u02b0")
        buf.write("\u02b1\7t\2\2\u02b1\u02b2\7g\2\2\u02b2\u02b3\7v\2\2\u02b3")
        buf.write("\u02b4\7w\2\2\u02b4\u02b5\7t\2\2\u02b5\u02b6\7p\2\2\u02b6")
        buf.write("\u02b7\7u\2\2\u02b7\u0084\3\2\2\2\u02b8\u02b9\7c\2\2\u02b9")
        buf.write("\u02ba\7u\2\2\u02ba\u02bb\7u\2\2\u02bb\u02bc\7w\2\2\u02bc")
        buf.write("\u02bd\7o\2\2\u02bd\u02be\7g\2\2\u02be\u0086\3\2\2\2\u02bf")
        buf.write("\u02c0\7i\2\2\u02c0\u02c1\7w\2\2\u02c1\u02c2\7c\2\2\u02c2")
        buf.write("\u02c3\7t\2\2\u02c3\u02c4\7c\2\2\u02c4\u02c5\7p\2\2\u02c5")
        buf.write("\u02c6\7v\2\2\u02c6\u02c7\7g\2\2\u02c7\u02c8\7g\2\2\u02c8")
        buf.write("\u0088\3\2\2\2\u02c9\u02ca\7u\2\2\u02ca\u02cb\7k\2\2\u02cb")
        buf.write("\u02cc\7i\2\2\u02cc\u008a\3\2\2\2\u02cd\u02ce\7x\2\2\u02ce")
        buf.write("\u02cf\7c\2\2\u02cf\u02d0\7t\2\2\u02d0\u008c\3\2\2\2\u02d1")
        buf.write("\u02d2\7n\2\2\u02d2\u02d3\7g\2\2\u02d3\u02d4\7v\2\2\u02d4")
        buf.write("\u008e\3\2\2\2\u02d5\u02d6\7v\2\2\u02d6\u02d7\7g\2\2\u02d7")
        buf.write("\u02d8\7n\2\2\u02d8\u0090\3\2\2\2\u02d9\u02da\7y\2\2\u02da")
        buf.write("\u02db\7j\2\2\u02db\u02dc\7g\2\2\u02dc\u02dd\7t\2\2\u02dd")
        buf.write("\u02de\7g\2\2\u02de\u0092\3\2\2\2\u02df\u02e0\7u\2\2\u02e0")
        buf.write("\u02e1\7r\2\2\u02e1\u02e2\7g\2\2\u02e2\u02e3\7e\2\2\u02e3")
        buf.write("\u02e4\7k\2\2\u02e4\u02e5\7c\2\2\u02e5\u02e6\7n\2\2\u02e6")
        buf.write("\u02e7\7k\2\2\u02e7\u02e8\7|\2\2\u02e8\u02e9\7g\2\2\u02e9")
        buf.write("\u0094\3\2\2\2\u02ea\u02eb\7h\2\2\u02eb\u02ec\7w\2\2\u02ec")
        buf.write("\u02ed\7p\2\2\u02ed\u02ee\7e\2\2\u02ee\u02ef\7v\2\2\u02ef")
        buf.write("\u02f0\7k\2\2\u02f0\u02f1\7q\2\2\u02f1\u02f2\7p\2\2\u02f2")
        buf.write("\u0096\3\2\2\2\u02f3\u02f4\7p\2\2\u02f4\u02f5\7q\2\2\u02f5")
        buf.write("\u02f6\7f\2\2\u02f6\u02f7\7g\2\2\u02f7\u0098\3\2\2\2\u02f8")
        buf.write("\u02f9\7t\2\2\u02f9\u02fa\7g\2\2\u02fa\u02fb\7v\2\2\u02fb")
        buf.write("\u02fc\7w\2\2\u02fc\u02fd\7t\2\2\u02fd\u02fe\7p\2\2\u02fe")
        buf.write("\u009a\3\2\2\2\u02ff\u0300\7p\2\2\u0300\u0301\7q\2\2\u0301")
        buf.write("\u0302\7v\2\2\u0302\u009c\3\2\2\2\u0303\u0304\7f\2\2\u0304")
        buf.write("\u0305\7g\2\2\u0305\u0306\7h\2\2\u0306\u0307\7c\2\2\u0307")
        buf.write("\u0308\7w\2\2\u0308\u0309\7n\2\2\u0309\u030a\7v\2\2\u030a")
        buf.write("\u009e\3\2\2\2\u030b\u030c\7y\2\2\u030c\u030d\7j\2\2\u030d")
        buf.write("\u030e\7g\2\2\u030e\u030f\7p\2\2\u030f\u00a0\3\2\2\2\u0310")
        buf.write("\u0311\7e\2\2\u0311\u0312\7n\2\2\u0312\u0313\7q\2\2\u0313")
        buf.write("\u0314\7e\2\2\u0314\u0315\7m\2\2\u0315\u00a2\3\2\2\2\u0316")
        buf.write("\u0317\7r\2\2\u0317\u0318\7t\2\2\u0318\u0319\7q\2\2\u0319")
        buf.write("\u031a\7d\2\2\u031a\u031b\7g\2\2\u031b\u00a4\3\2\2\2\u031c")
        buf.write("\u031d\7k\2\2\u031d\u031e\7u\2\2\u031e\u00a6\3\2\2\2\u031f")
        buf.write("\u0320\7i\2\2\u0320\u0321\7t\2\2\u0321\u0322\7q\2\2\u0322")
        buf.write("\u0323\7w\2\2\u0323\u0324\7r\2\2\u0324\u00a8\3\2\2\2\u0325")
        buf.write("\u0326\7k\2\2\u0326\u0327\7o\2\2\u0327\u0328\7r\2\2\u0328")
        buf.write("\u0329\7q\2\2\u0329\u032a\7t\2\2\u032a\u032b\7v\2\2\u032b")
        buf.write("\u00aa\3\2\2\2\u032c\u032d\7e\2\2\u032d\u032e\7q\2\2\u032e")
        buf.write("\u032f\7p\2\2\u032f\u0330\7u\2\2\u0330\u0331\7v\2\2\u0331")
        buf.write("\u00ac\3\2\2\2\u0332\u0333\7u\2\2\u0333\u0334\7g\2\2\u0334")
        buf.write("\u0335\7p\2\2\u0335\u0336\7u\2\2\u0336\u0337\7q\2\2\u0337")
        buf.write("\u0338\7t\2\2\u0338\u00ae\3\2\2\2\u0339\u033a\7v\2\2\u033a")
        buf.write("\u033b\7{\2\2\u033b\u033c\7r\2\2\u033c\u033d\7g\2\2\u033d")
        buf.write("\u00b0\3\2\2\2\u033e\u033f\7q\2\2\u033f\u0340\7r\2\2\u0340")
        buf.write("\u0341\7g\2\2\u0341\u0342\7p\2\2\u0342\u00b2\3\2\2\2\u0343")
        buf.write("\u0344\7v\2\2\u0344\u0345\7t\2\2\u0345\u0346\7w\2\2\u0346")
        buf.write("\u0347\7g\2\2\u0347\u00b4\3\2\2\2\u0348\u0349\7h\2\2\u0349")
        buf.write("\u034a\7c\2\2\u034a\u034b\7n\2\2\u034b\u034c\7u\2\2\u034c")
        buf.write("\u034d\7g\2\2\u034d\u00b6\3\2\2\2\u034e\u034f\7r\2\2\u034f")
        buf.write("\u0350\7c\2\2\u0350\u0351\7e\2\2\u0351\u0352\7m\2\2\u0352")
        buf.write("\u0353\7c\2\2\u0353\u0354\7i\2\2\u0354\u0355\7g\2\2\u0355")
        buf.write("\u00b8\3\2\2\2\u0356\u0357\7g\2\2\u0357\u0358\7p\2\2\u0358")
        buf.write("\u0359\7f\2\2\u0359\u00ba\3\2\2\2\u035a\u035b\7g\2\2\u035b")
        buf.write("\u035c\7p\2\2\u035c\u035d\7w\2\2\u035d\u035e\7o\2\2\u035e")
        buf.write("\u00bc\3\2\2\2\u035f\u0360\7r\2\2\u0360\u0361\7w\2\2\u0361")
        buf.write("\u0362\7d\2\2\u0362\u0363\7n\2\2\u0363\u0364\7k\2\2\u0364")
        buf.write("\u0365\7e\2\2\u0365\u00be\3\2\2\2\u0366\u0367\7r\2\2\u0367")
        buf.write("\u0368\7t\2\2\u0368\u0369\7k\2\2\u0369\u036a\7x\2\2\u036a")
        buf.write("\u036b\7c\2\2\u036b\u036c\7v\2\2\u036c\u036d\7g\2\2\u036d")
        buf.write("\u00c0\3\2\2\2\u036e\u036f\7/\2\2\u036f\u00c2\3\2\2\2")
        buf.write("\u0370\u0371\7-\2\2\u0371\u00c4\3\2\2\2\u0372\u0373\7")
        buf.write(",\2\2\u0373\u00c6\3\2\2\2\u0374\u0375\7B\2\2\u0375\u00c8")
        buf.write("\3\2\2\2\u0376\u0377\7\60\2\2\u0377\u00ca\3\2\2\2\u0378")
        buf.write("\u0379\7\61\2\2\u0379\u00cc\3\2\2\2\u037a\u037b\7o\2\2")
        buf.write("\u037b\u037c\7q\2\2\u037c\u037d\7f\2\2\u037d\u00ce\3\2")
        buf.write("\2\2\u037e\u037f\7f\2\2\u037f\u0380\7k\2\2\u0380\u0381")
        buf.write("\7x\2\2\u0381\u00d0\3\2\2\2\u0382\u0383\7>\2\2\u0383\u00d2")
        buf.write("\3\2\2\2\u0384\u0385\7@\2\2\u0385\u00d4\3\2\2\2\u0386")
        buf.write("\u0387\7?\2\2\u0387\u0388\7?\2\2\u0388\u00d6\3\2\2\2\u0389")
        buf.write("\u038a\7@\2\2\u038a\u038b\7?\2\2\u038b\u00d8\3\2\2\2\u038c")
        buf.write("\u038d\7>\2\2\u038d\u038e\7?\2\2\u038e\u00da\3\2\2\2\u038f")
        buf.write("\u0390\7>\2\2\u0390\u0391\7@\2\2\u0391\u00dc\3\2\2\2\u0392")
        buf.write("\u0393\7%\2\2\u0393\u00de\3\2\2\2\u0394\u0395\7?\2\2\u0395")
        buf.write("\u00e0\3\2\2\2\u0396\u0397\7c\2\2\u0397\u0398\7p\2\2\u0398")
        buf.write("\u0399\7f\2\2\u0399\u00e2\3\2\2\2\u039a\u039b\7q\2\2\u039b")
        buf.write("\u039c\7t\2\2\u039c\u00e4\3\2\2\2\u039d\u039e\7z\2\2\u039e")
        buf.write("\u039f\7q\2\2\u039f\u03a0\7t\2\2\u03a0\u00e6\3\2\2\2\u03a1")
        buf.write("\u03a2\7a\2\2\u03a2\u00e8\3\2\2\2\u03a3\u03a4\7<\2\2\u03a4")
        buf.write("\u00ea\3\2\2\2\u03a5\u03a6\7=\2\2\u03a6\u00ec\3\2\2\2")
        buf.write("\u03a7\u03a8\7.\2\2\u03a8\u00ee\3\2\2\2\u03a9\u03aa\7")
        buf.write("<\2\2\u03aa\u03ab\7<\2\2\u03ab\u00f0\3\2\2\2\u03ac\u03ad")
        buf.write("\7`\2\2\u03ad\u00f2\3\2\2\2\u03ae\u03af\7\60\2\2\u03af")
        buf.write("\u03b0\7\60\2\2\u03b0\u00f4\3\2\2\2\u03b1\u03b2\7~\2\2")
        buf.write("\u03b2\u00f6\3\2\2\2\u03b3\u03b4\7}\2\2\u03b4\u03b5\b")
        buf.write("|\2\2\u03b5\u00f8\3\2\2\2\u03b6\u03b7\7\177\2\2\u03b7")
        buf.write("\u03b8\b}\3\2\u03b8\u00fa\3\2\2\2\u03b9\u03ba\7*\2\2\u03ba")
        buf.write("\u03bb\b~\4\2\u03bb\u00fc\3\2\2\2\u03bc\u03bd\7+\2\2\u03bd")
        buf.write("\u03be\b\177\5\2\u03be\u00fe\3\2\2\2\u03bf\u03c0\7]\2")
        buf.write("\2\u03c0\u03c1\b\u0080\6\2\u03c1\u0100\3\2\2\2\u03c2\u03c3")
        buf.write("\7_\2\2\u03c3\u03c4\b\u0081\7\2\u03c4\u0102\3\2\2\2\u03c5")
        buf.write("\u03c6\7>\2\2\u03c6\u03c7\7>\2\2\u03c7\u03c8\3\2\2\2\u03c8")
        buf.write("\u03c9\b\u0082\b\2\u03c9\u0104\3\2\2\2\u03ca\u03cb\7@")
        buf.write("\2\2\u03cb\u03cc\7@\2\2\u03cc\u03cd\3\2\2\2\u03cd\u03ce")
        buf.write("\b\u0083\t\2\u03ce\u0106\3\2\2\2\u03cf\u03d3\5\u011d\u008f")
        buf.write("\2\u03d0\u03d2\5\u011f\u0090\2\u03d1\u03d0\3\2\2\2\u03d2")
        buf.write("\u03d5\3\2\2\2\u03d3\u03d1\3\2\2\2\u03d3\u03d4\3\2\2\2")
        buf.write("\u03d4\u03dc\3\2\2\2\u03d5\u03d3\3\2\2\2\u03d6\u03d8\7")
        buf.write("\62\2\2\u03d7\u03d6\3\2\2\2\u03d8\u03d9\3\2\2\2\u03d9")
        buf.write("\u03d7\3\2\2\2\u03d9\u03da\3\2\2\2\u03da\u03dc\3\2\2\2")
        buf.write("\u03db\u03cf\3\2\2\2\u03db\u03d7\3\2\2\2\u03dc\u0108\3")
        buf.write("\2\2\2\u03dd\u03de\7\62\2\2\u03de\u03e0\t\2\2\2\u03df")
        buf.write("\u03e1\5\u0121\u0091\2\u03e0\u03df\3\2\2\2\u03e1\u03e2")
        buf.write("\3\2\2\2\u03e2\u03e0\3\2\2\2\u03e2\u03e3\3\2\2\2\u03e3")
        buf.write("\u010a\3\2\2\2\u03e4\u03e5\7\62\2\2\u03e5\u03e7\t\3\2")
        buf.write("\2\u03e6\u03e8\5\u0123\u0092\2\u03e7\u03e6\3\2\2\2\u03e8")
        buf.write("\u03e9\3\2\2\2\u03e9\u03e7\3\2\2\2\u03e9\u03ea\3\2\2\2")
        buf.write("\u03ea\u010c\3\2\2\2\u03eb\u03ec\7\62\2\2\u03ec\u03ee")
        buf.write("\t\4\2\2\u03ed\u03ef\5\u0125\u0093\2\u03ee\u03ed\3\2\2")
        buf.write("\2\u03ef\u03f0\3\2\2\2\u03f0\u03ee\3\2\2\2\u03f0\u03f1")
        buf.write("\3\2\2\2\u03f1\u010e\3\2\2\2\u03f2\u03f4\5\u0115\u008b")
        buf.write("\2\u03f3\u03f2\3\2\2\2\u03f3\u03f4\3\2\2\2\u03f4\u03f5")
        buf.write("\3\2\2\2\u03f5\u03fa\5\u0117\u008c\2\u03f6\u03f7\5\u0115")
        buf.write("\u008b\2\u03f7\u03f8\5\u00c9e\2\u03f8\u03fa\3\2\2\2\u03f9")
        buf.write("\u03f3\3\2\2\2\u03f9\u03f6\3\2\2\2\u03fa\u0110\3\2\2\2")
        buf.write("\u03fb\u03ff\5\u0119\u008d\2\u03fc\u03fe\5\u011b\u008e")
        buf.write("\2\u03fd\u03fc\3\2\2\2\u03fe\u0401\3\2\2\2\u03ff\u03fd")
        buf.write("\3\2\2\2\u03ff\u0400\3\2\2\2\u0400\u0112\3\2\2\2\u0401")
        buf.write("\u03ff\3\2\2\2\u0402\u0403\5\u0127\u0094\2\u0403\u0404")
        buf.write("\3\2\2\2\u0404\u0405\b\u008a\n\2\u0405\u0114\3\2\2\2\u0406")
        buf.write("\u0408\5\u011f\u0090\2\u0407\u0406\3\2\2\2\u0408\u0409")
        buf.write("\3\2\2\2\u0409\u0407\3\2\2\2\u0409\u040a\3\2\2\2\u040a")
        buf.write("\u0116\3\2\2\2\u040b\u040d\5\u00c9e\2\u040c\u040e\5\u011f")
        buf.write("\u0090\2\u040d\u040c\3\2\2\2\u040e\u040f\3\2\2\2\u040f")
        buf.write("\u040d\3\2\2\2\u040f\u0410\3\2\2\2\u0410\u0118\3\2\2\2")
        buf.write("\u0411\u0414\t\5\2\2\u0412\u0414\5\u00e7t\2\u0413\u0411")
        buf.write("\3\2\2\2\u0413\u0412\3\2\2\2\u0414\u011a\3\2\2\2\u0415")
        buf.write("\u0418\5\u0119\u008d\2\u0416\u0418\t\6\2\2\u0417\u0415")
        buf.write("\3\2\2\2\u0417\u0416\3\2\2\2\u0418\u011c\3\2\2\2\u0419")
        buf.write("\u041a\t\7\2\2\u041a\u011e\3\2\2\2\u041b\u041c\t\6\2\2")
        buf.write("\u041c\u0120\3\2\2\2\u041d\u041e\t\b\2\2\u041e\u0122\3")
        buf.write("\2\2\2\u041f\u0420\t\t\2\2\u0420\u0124\3\2\2\2\u0421\u0422")
        buf.write("\t\n\2\2\u0422\u0126\3\2\2\2\u0423\u0425\t\13\2\2\u0424")
        buf.write("\u0423\3\2\2\2\u0425\u0426\3\2\2\2\u0426\u0424\3\2\2\2")
        buf.write("\u0426\u0427\3\2\2\2\u0427\u0128\3\2\2\2\21\2\u03d3\u03d9")
        buf.write("\u03db\u03e2\u03e9\u03f0\u03f3\u03f9\u03ff\u0409\u040f")
        buf.write("\u0413\u0417\u0426\13\3|\2\3}\3\3~\4\3\177\5\3\u0080\6")
        buf.write("\3\u0081\7\3\u0082\b\3\u0083\t\b\2\2")
        return buf.getvalue()


class testLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    FLOAT32 = 2
    FLOAT64 = 3
    INT8 = 4
    INT16 = 5
    INT32 = 6
    INT64 = 7
    UINT8 = 8
    UINT16 = 9
    UINT32 = 10
    UINT64 = 11
    CHAR = 12
    BOOL = 13
    FOLDW = 14
    FOLDWI = 15
    MAP = 16
    MAPI = 17
    FOLD = 18
    FOLDI = 19
    MAPW = 20
    MAPWI = 21
    MAPFOLD = 22
    MAPFOLDI = 23
    MAPFOLDW = 24
    MAPFOLDWI = 25
    CASE = 26
    MAKE = 27
    FLATTEN = 28
    ITERATOR = 29
    EVERY = 30
    PREFIXOP = 31
    OF = 32
    WITH = 33
    REVERSE = 34
    TRANSPOSE = 35
    LNOT = 36
    LAND = 37
    LOR = 38
    LXOR = 39
    LSL = 40
    LSR = 41
    PRE = 42
    ARROW = 43
    FBY = 44
    TIMES = 45
    MERGE = 46
    LAST = 47
    RESTART = 48
    RESUME = 49
    DO = 50
    ELIF = 51
    AUTOMATON = 52
    INITIAL = 53
    FINAL = 54
    STATE = 55
    UNLESS = 56
    UNTIL = 57
    SYNCHRO = 58
    MATCH = 59
    THEN = 60
    ELSE = 61
    ACTIVATE = 62
    EMIT = 63
    IF = 64
    RETURNS = 65
    ASSUME = 66
    GUARANTEE = 67
    SIG = 68
    VAR = 69
    LET = 70
    TEL = 71
    WHERE = 72
    SPECIALIZE = 73
    FUNCTION = 74
    NODE = 75
    RETURN = 76
    NOT = 77
    DEFAULT = 78
    WHEN = 79
    CLOCK = 80
    PROBE = 81
    IS = 82
    GROUP = 83
    IMPORT = 84
    CONST = 85
    SENSOR = 86
    TYPE = 87
    OPEN = 88
    TRUE = 89
    FALSE = 90
    PACKAGE = 91
    END = 92
    ENUM = 93
    PUBLIC = 94
    PRIVATE = 95
    MINUS = 96
    ADD = 97
    STAR = 98
    AT = 99
    DOT = 100
    DIV = 101
    MOD = 102
    IDIV = 103
    LESS_THAN = 104
    GREATER_THAN = 105
    EQUALS = 106
    GT_EQ = 107
    LT_EQ = 108
    NOT_EQ = 109
    SHARP = 110
    ASSIGN = 111
    AND = 112
    OR = 113
    XOR = 114
    UNDERLINE = 115
    COLON = 116
    SEMI = 117
    COMMA = 118
    DOMAIN = 119
    CIRCUMFLEX = 120
    ELLIPSIS = 121
    OR_OP = 122
    OPEN_BRACE = 123
    CLOSE_BRACE = 124
    LPAREN = 125
    RPAREN = 126
    LBRACK = 127
    RBRACK = 128
    LDLT = 129
    RDGT = 130
    DECIMAL_INTEGER = 131
    OCT_INTEGER = 132
    HEX_INTEGER = 133
    BIN_INTEGER = 134
    DOUBLE = 135
    ID = 136
    MYSKIP = 137

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'''", "'float32'", "'float64'", "'int8'", "'int16'", "'int32'", 
            "'int64'", "'uint8'", "'uint16'", "'uint32'", "'uint64'", "'char'", 
            "'bool'", "'foldw'", "'foldwi'", "'map'", "'mapi'", "'fold'", 
            "'foldi'", "'mapw'", "'mapwi'", "'mapfold'", "'mapfoldi'", "'mapfoldw'", 
            "'mapfoldwi'", "'case'", "'make'", "'flatten'", "'iterator'", 
            "'every'", "'prefixop'", "'of'", "'with'", "'reverse'", "'transpose'", 
            "'lnot'", "'land'", "'lor'", "'lxor'", "'lsl'", "'lsr'", "'pre'", 
            "'arrow'", "'fby'", "'times'", "'merge'", "'last'", "'restart'", 
            "'resume'", "'do'", "'elif'", "'automaton'", "'initial'", "'final'", 
            "'state'", "'unless'", "'until'", "'synchro'", "'match'", "'then'", 
            "'else'", "'activate'", "'emit'", "'if'", "'returns'", "'assume'", 
            "'guarantee'", "'sig'", "'var'", "'let'", "'tel'", "'where'", 
            "'specialize'", "'function'", "'node'", "'return'", "'not'", 
            "'default'", "'when'", "'clock'", "'probe'", "'is'", "'group'", 
            "'import'", "'const'", "'sensor'", "'type'", "'open'", "'true'", 
            "'false'", "'package'", "'end'", "'enum'", "'public'", "'private'", 
            "'-'", "'+'", "'*'", "'@'", "'.'", "'/'", "'mod'", "'div'", 
            "'<'", "'>'", "'=='", "'>='", "'<='", "'<>'", "'#'", "'='", 
            "'and'", "'or'", "'xor'", "'_'", "':'", "';'", "','", "'::'", 
            "'^'", "'..'", "'|'", "'{'", "'}'", "'('", "')'", "'['", "']'", 
            "'<<'", "'>>'" ]

    symbolicNames = [ "<INVALID>",
            "FLOAT32", "FLOAT64", "INT8", "INT16", "INT32", "INT64", "UINT8", 
            "UINT16", "UINT32", "UINT64", "CHAR", "BOOL", "FOLDW", "FOLDWI", 
            "MAP", "MAPI", "FOLD", "FOLDI", "MAPW", "MAPWI", "MAPFOLD", 
            "MAPFOLDI", "MAPFOLDW", "MAPFOLDWI", "CASE", "MAKE", "FLATTEN", 
            "ITERATOR", "EVERY", "PREFIXOP", "OF", "WITH", "REVERSE", "TRANSPOSE", 
            "LNOT", "LAND", "LOR", "LXOR", "LSL", "LSR", "PRE", "ARROW", 
            "FBY", "TIMES", "MERGE", "LAST", "RESTART", "RESUME", "DO", 
            "ELIF", "AUTOMATON", "INITIAL", "FINAL", "STATE", "UNLESS", 
            "UNTIL", "SYNCHRO", "MATCH", "THEN", "ELSE", "ACTIVATE", "EMIT", 
            "IF", "RETURNS", "ASSUME", "GUARANTEE", "SIG", "VAR", "LET", 
            "TEL", "WHERE", "SPECIALIZE", "FUNCTION", "NODE", "RETURN", 
            "NOT", "DEFAULT", "WHEN", "CLOCK", "PROBE", "IS", "GROUP", "IMPORT", 
            "CONST", "SENSOR", "TYPE", "OPEN", "TRUE", "FALSE", "PACKAGE", 
            "END", "ENUM", "PUBLIC", "PRIVATE", "MINUS", "ADD", "STAR", 
            "AT", "DOT", "DIV", "MOD", "IDIV", "LESS_THAN", "GREATER_THAN", 
            "EQUALS", "GT_EQ", "LT_EQ", "NOT_EQ", "SHARP", "ASSIGN", "AND", 
            "OR", "XOR", "UNDERLINE", "COLON", "SEMI", "COMMA", "DOMAIN", 
            "CIRCUMFLEX", "ELLIPSIS", "OR_OP", "OPEN_BRACE", "CLOSE_BRACE", 
            "LPAREN", "RPAREN", "LBRACK", "RBRACK", "LDLT", "RDGT", "DECIMAL_INTEGER", 
            "OCT_INTEGER", "HEX_INTEGER", "BIN_INTEGER", "DOUBLE", "ID", 
            "MYSKIP" ]

    ruleNames = [ "T__0", "FLOAT32", "FLOAT64", "INT8", "INT16", "INT32", 
                  "INT64", "UINT8", "UINT16", "UINT32", "UINT64", "CHAR", 
                  "BOOL", "FOLDW", "FOLDWI", "MAP", "MAPI", "FOLD", "FOLDI", 
                  "MAPW", "MAPWI", "MAPFOLD", "MAPFOLDI", "MAPFOLDW", "MAPFOLDWI", 
                  "CASE", "MAKE", "FLATTEN", "ITERATOR", "EVERY", "PREFIXOP", 
                  "OF", "WITH", "REVERSE", "TRANSPOSE", "LNOT", "LAND", 
                  "LOR", "LXOR", "LSL", "LSR", "PRE", "ARROW", "FBY", "TIMES", 
                  "MERGE", "LAST", "RESTART", "RESUME", "DO", "ELIF", "AUTOMATON", 
                  "INITIAL", "FINAL", "STATE", "UNLESS", "UNTIL", "SYNCHRO", 
                  "MATCH", "THEN", "ELSE", "ACTIVATE", "EMIT", "IF", "RETURNS", 
                  "ASSUME", "GUARANTEE", "SIG", "VAR", "LET", "TEL", "WHERE", 
                  "SPECIALIZE", "FUNCTION", "NODE", "RETURN", "NOT", "DEFAULT", 
                  "WHEN", "CLOCK", "PROBE", "IS", "GROUP", "IMPORT", "CONST", 
                  "SENSOR", "TYPE", "OPEN", "TRUE", "FALSE", "PACKAGE", 
                  "END", "ENUM", "PUBLIC", "PRIVATE", "MINUS", "ADD", "STAR", 
                  "AT", "DOT", "DIV", "MOD", "IDIV", "LESS_THAN", "GREATER_THAN", 
                  "EQUALS", "GT_EQ", "LT_EQ", "NOT_EQ", "SHARP", "ASSIGN", 
                  "AND", "OR", "XOR", "UNDERLINE", "COLON", "SEMI", "COMMA", 
                  "DOMAIN", "CIRCUMFLEX", "ELLIPSIS", "OR_OP", "OPEN_BRACE", 
                  "CLOSE_BRACE", "LPAREN", "RPAREN", "LBRACK", "RBRACK", 
                  "LDLT", "RDGT", "DECIMAL_INTEGER", "OCT_INTEGER", "HEX_INTEGER", 
                  "BIN_INTEGER", "DOUBLE", "ID", "MYSKIP", "INT_PART", "FRACTION", 
                  "ID_START", "ID_CONTINUE", "NON_ZERO_DIGIT", "DIGIT", 
                  "OCT_DIGIT", "HEX_DIGIT", "BIN_DIGIT", "SPACES" ]

    grammarFileName = "test.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.9.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


    implicitLineJoiningLevel = 0
    # protected int startPos=-1;


    def action(self, localctx:RuleContext, ruleIndex:int, actionIndex:int):
        if self._actions is None:
            actions = dict()
            actions[122] = self.OPEN_BRACE_action 
            actions[123] = self.CLOSE_BRACE_action 
            actions[124] = self.LPAREN_action 
            actions[125] = self.RPAREN_action 
            actions[126] = self.LBRACK_action 
            actions[127] = self.RBRACK_action 
            actions[128] = self.LDLT_action 
            actions[129] = self.RDGT_action 
            self._actions = actions
        action = self._actions.get(ruleIndex, None)
        if action is not None:
            action(localctx, actionIndex)
        else:
            raise Exception("No registered action for:" + str(ruleIndex))


    def OPEN_BRACE_action(self, localctx:RuleContext , actionIndex:int):
        if actionIndex == 0:
            self.implicitLineJoiningLevel+=1
     

    def CLOSE_BRACE_action(self, localctx:RuleContext , actionIndex:int):
        if actionIndex == 1:
            self.implicitLineJoiningLevel-=1
     

    def LPAREN_action(self, localctx:RuleContext , actionIndex:int):
        if actionIndex == 2:
            self.implicitLineJoiningLevel+=1
     

    def RPAREN_action(self, localctx:RuleContext , actionIndex:int):
        if actionIndex == 3:
            self.implicitLineJoiningLevel-=1
     

    def LBRACK_action(self, localctx:RuleContext , actionIndex:int):
        if actionIndex == 4:
            self.implicitLineJoiningLevel+=1
     

    def RBRACK_action(self, localctx:RuleContext , actionIndex:int):
        if actionIndex == 5:
            self.implicitLineJoiningLevel-=1
     

    def LDLT_action(self, localctx:RuleContext , actionIndex:int):
        if actionIndex == 6:
            self.implicitLineJoiningLevel+=1
     

    def RDGT_action(self, localctx:RuleContext , actionIndex:int):
        if actionIndex == 7:
            self.implicitLineJoiningLevel-=1
     


